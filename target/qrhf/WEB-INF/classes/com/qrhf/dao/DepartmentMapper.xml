<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qrhf.dao.DepartmentMapper">
	<resultMap id="BaseResultMap" type="com.qrhf.pojo.Department">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="company_id" property="companyId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="is_valid" property="isValid" jdbcType="VARCHAR" />
		<result column="is_valid_date" property="isValidDate" jdbcType="DATE" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id id,company_id companyId,department_id
		departmentId,name name,code code,is_valid,is_valid_date,status status,sort sort
	</sql>
	<select id="findList" resultType="com.qrhf.pojo.Department" parameterType="Map">
		select
			d.id,d.company_id companyId,d.department_id departmentId,d.name,d.code,d.is_valid,d.is_valid_date,d.status,IFNULL(p.id,0) isProject,d.sort sort
		from 
			department d left join project p on d.id = p.department_id
		where 
			d.company_id = #{companyId}
		<if test="parentId!=-1">
			and d.department_id = #{parentId}
		</if>
		ORDER BY d.sort 
		<if test="a!=null">
			LIMIT #{a},#{b}
		</if>
	</select>
	<!-- <select id="checkCode" resultType="com.qrhf.pojo.Department" parameterType="Map">
		select * from department d where d.company_id = #{companyId} and d.code = #{code}
		select * from department d where d.company_id = #{companyId} and (d.code = #{code} or d.name=#{name}) 
	</select>-->
	
	
	<select id="checkCode" resultType="com.qrhf.pojo.Department">
		select * from department where company_id = #{companyId}
		<if test="id!=0">
			and code = #{code} and id!=#{id}
		</if>
		<if test="id==0">
			and code = #{code}
		</if>
	</select>
	
	<select id="tree" parameterType="java.lang.Integer" resultType="com.qrhf.vo.Node">
		select -1 id,(select name from company where id = #{companyId}) text,null parentId from dual
		union
		select * from (select a.id,a.name
		text,a.department_id parentId from
		department a where a.Is_Valid =1 and
		a.company_id = #{companyId} ORDER BY a.sort)a
	</select>
	<insert id="add" parameterType="com.qrhf.pojo.Department">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into
		department(company_id,department_id,name,code,is_valid,status,sort)VALUES(#{companyId},#{departmentId},#{name},#{code},1,#{status},9999);
	</insert>
	<select id="findDelDepartmentIds" parameterType="java.lang.Integer" resultType="java.lang.String">
		select queryChildrenAreaInfo(#{departmentId});
	</select>
	<delete id="del" parameterType="java.lang.String">
		delete from department where id in ( ${ids} )
	</delete>
	<select id="getById" parameterType="java.lang.Integer"
		resultType="com.qrhf.pojo.Department">
		select
		<include refid="Base_Column_List" />
		from department where id=#{id}
	</select>
	<select id="selectDepartment" parameterType="java.lang.Integer"
		resultType="com.qrhf.pojo.Department">
		SELECT
			<include refid="Base_Column_List" />
		FROM
			department
		WHERE
			company_id = #{companyId}
	</select>
	<update id="update" parameterType="com.qrhf.pojo.Department">
		update department set
		name=#{name},code=#{code},status=#{status} where id=#{id}
	</update>
	<update id="updateDepartmentOrderBy" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
		    update department 
		    <set>
		        sort=${item.sort}
			</set>
		    where id='${item.id}' 
		</foreach>
	</update>
</mapper>